{"version":3,"sources":["components/Container/Container.js","components/Input/Input.js","components/Label/Label.js","components/options.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.js","index.js"],"names":["Container","children","className","s","container","Input","id","type","name","value","handleChange","options","onChange","event","pattern","title","required","Label","htmlFor","number","ContactForm","state","nameInputId","uuidv4","numberInputId","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","Component","ContactList","contactList","onDeleteContact","map","item","onClick","Filter","App","contacts","filter","checkName","newName","find","addContact","alert","newContact","prevState","deleteContact","contactId","contact","changeFilter","getFilteredContacts","normalizedFilter","toLowerCase","includes","filteredContacts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea934cd6.chunk.js","sourcesContent":["import s from \"./Container.module.css\";\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\nexport default Container;\n","const Input = ({ id, type, name, value, handleChange, options }) => {\n  return (\n    <input\n      id={id}\n      type={type}\n      name={name}\n      value={value}\n      onChange={(event) => {\n        handleChange(event);\n      }}\n      pattern={options.pattern}\n      title={options.title}\n      required\n    />\n  );\n};\nexport default Input;\n","const Label = ({ id, title, children }) => {\n  return (\n    <label htmlFor={id}>\n      {title}\n      {children}\n    </label>\n  );\n};\nexport default Label;\n","const options = {\n  name: {\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\n  },\n  number: {\n    pattern: \"+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}\",\n    title:\n      \"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\",\n  },\n};\n\nexport default options;\n","import { Component } from \"react\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport Input from \"../Input\";\nimport Label from \"../Label\";\nimport options from \"../options\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <Label id={this.nameInputId} title=\"Name\">\n          <Input\n            id={this.nameInputId}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            handleChange={this.handleChange}\n            options={options.name}\n          />\n        </Label>\n        <Label id={this.numberInputId} title=\"Number\">\n          <Input\n            id={this.numberInputId}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            handleChange={this.handleChange}\n            options={options.number}\n          />\n        </Label>\n        <button type=\"submit\">add Contact</button>\n      </form>\n    );\n  }\n}\nexport default ContactForm;\n","const ContactList = ({ contactList, onDeleteContact }) => {\n  return (\n    <ul>\n      {contactList.map((item) => {\n        const { id, name, number } = item;\n        return (\n          <li key={id}>\n            {name}: {number}\n            <button type=\"button\" onClick={() => onDeleteContact(id)}>\n              delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default ContactList;\n","const Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={onChange}></input>\n    </label>\n  );\n};\nexport default Filter;\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport Container from \"../Container\";\nimport ContactForm from \"../ContactForm\";\nimport ContactList from \"../ContactList/\";\nimport Filter from \"../Filter\";\n\nimport \"./App.css\";\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  checkName = (newName) => {\n    return this.state.contacts.find(({ name }) => name === newName);\n  };\n\n  addContact = ({ name, number }) => {\n    if (!this.checkName(name)) {\n      const newContact = {\n        id: uuidv4(),\n        name,\n        number,\n      };\n\n      this.setState((prevState) => ({\n        contacts: [newContact, ...prevState.contacts],\n      }));\n      return;\n    }\n    alert(`${name} is already in contacts`);\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n  changeFilter = (event) => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <>\n        <Container>\n          <h1>Phonebook</h1>\n          <ContactForm onSubmit={this.addContact} />\n        </Container>\n        {this.state.contacts.length > 0 ? (\n          <Container>\n            <h2>Contacts</h2>\n            <Filter value={filter} onChange={this.changeFilter} />\n            <ContactList\n              contactList={filteredContacts}\n              onDeleteContact={this.deleteContact}\n            />\n          </Container>\n        ) : (\n          <h2>phone book is empty</h2>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}